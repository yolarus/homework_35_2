name: Django CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: |
          flake8 .

  test:
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python manage.py test
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
    
  build:
    needs: test
    runs-on:  ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/mypedia:${{ github.sha }} .

      - name: Push Docker image in Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/mypedia:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER }} << 'EOF'
          docker pull ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}/mypedia:${{ github.sha }}
          docker stop mypedia || true
          docker rm mypedia || true
          docker run -d --name mypedia -p 80:8000 ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}/mypedia:${{ github.sha }}
          EOF